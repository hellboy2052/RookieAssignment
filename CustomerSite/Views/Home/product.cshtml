@model ShareVM.ProductVm

@{
    ViewData["Title"] = $"Product of {Model.Name}";
    ViewData["css"] = "/css/productdetail.css";
    ViewData["js"] = "js/productdetail.js";
}


<!--Section: Block Content-->
<section class="mb-5">
   <div class="row">
      <div class="col-md-6 mb-4 mb-md-0">
         <div id="mdb-lightbox-ui"></div>
         <div class="mdb-lightbox">
            <div class="row product-gallery mx-1">
               @* Main image *@
               <div class="col-12 mb-0">
                  <figure class="view overlay rounded z-depth-1 main-img">
                     <a href="@Model.Image"
                        data-size="710x823">
                     <img src="@Model.Image"
                        class="img-fluid z-depth-1">
                     </a>
                  </figure>
               </div>
               @* Image gallery *@
               <div class="col-12">
                  <div class="row">
                      @foreach (var item in Model.Pictures)
                      {
                        <div class="col-3">
                            <div class="view overlay rounded z-depth-1 gallery-item">
                                <img src="@item.Url"
                                    class="img-fluid">
                                <div class="mask rgba-white-slight"></div>
                            </div>
                        </div>
                      }
                     
                     <div class="col-3">
                     </div>
                     <div class="col-3">
                     </div>
                     <div class="col-3">
                     </div>
                  </div>
               </div>
            </div>
         </div>
      </div>
      <div class="col-md-6">
         @* Title *@
         <h5>@Model.Name</h5>
         @* Price *@
         <p><span class="mr-1"><strong>@Model.Price VND</strong></span></p>
         @* Rating *@
         <div class="clearfix">
             @using (Html.BeginForm("rating", "home", null, FormMethod.Post, false, new {@class = "rating"} )){
                @Html.HiddenFor(x => x.Id)
                <input type="radio" id="star5" name="rating" value="5" @{if (Model.currentRate == "5") { <text>checked</text> } } /><label class = "full" for="star5" title="Awesome - 5 stars"></label>

                <input type="radio" id="star4half" name="rating" value="4.5" @{if (Model.currentRate == "4.5") { <text>checked</text> } } /><label class="half" for="star4half" title="Pretty good - 4.5 stars"></label>
                <input type="radio" id="star4" name="rating" value="4" @{if (Model.currentRate == "4") { <text>checked</text> } } /><label class = "full" for="star4" title="Pretty good - 4 stars"></label>
                <input type="radio" id="star3half" name="rating" value="3.5" @{if (Model.currentRate == "3.5") { <text>checked</text> } } /><label class="half" for="star3half" title="Meh - 3.5 stars"></label>
                <input type="radio" id="star3" name="rating" value="3" @{if (Model.currentRate == "3") { <text>checked</text> } } /><label class = "full" for="star3" title="Meh - 3 stars"></label>
                <input type="radio" id="star2half" name="rating" value="2.5" @{if (Model.currentRate == "2.5") { <text>checked</text> } } /><label class="half" for="star2half" title="Kinda bad - 2.5 stars"></label>
                <input type="radio" id="star2" name="rating" value="2" @{if (Model.currentRate == "2") { <text>checked</text> } } /><label class = "full" for="star2" title="Kinda bad - 2 stars"></label>
                <input type="radio" id="star1half" name="rating" value="1.5" @{if (Model.currentRate == "1.5") { <text>checked</text> } } /><label class="half" for="star1half" title="Meh - 1.5 stars"></label>
                <input type="radio" id="star1" name="rating" value="1" @{if (Model.currentRate == "1") { <text>checked</text> } } /><label class = "full" for="star1" title="Sucks big time - 1 star"></label>
                <input type="radio" id="starhalf" name="rating" value="0.5" @{if (Model.currentRate == "0.5") { <text>checked</text> } } /><label class="half" for="starhalf" title="Sucks big time - 0.5 stars"></label>
            }
         </div>
         @* Rating score *@
         <p class="pt-1">Rating: @Model.rating
             
         </p>
         <p class="pt-1">Rating count: @Model.ratingCount
             
         </p>
         @* Description *@
         <p class="pt-1">@Model.Description
         </p>
         <hr>
         <form method="POST">
            <div class="table-responsive mb-2">
                <table class="table table-sm table-borderless">
                <tbody>
                    <tr>
                        <td class="pl-0 pb-0 w-25">Quantity</td>
                    </tr>
                    <tr>
                        <td class="pl-0">
                            <div class="def-number-input number-input safari_only mb-0">
                            <button type="button" onclick="this.parentNode.querySelector('input[type=number]').stepDown()"
                                class="minus">-</button>
                            <input id="qty" class="quantity" min="0" name="quantity" value="1" type="number">
                            <button type="button" onclick="this.parentNode.querySelector('input[type=number]').stepUp()"
                                class="plus">+</button>
                            </div>
                        </td>
                    </tr>
                </tbody>
                </table>
            </div>
             
            <button onclick="itemadding()" asp-controller="Home" asp-action="AddToCart" asp-route-id="@Model.Id" type="submit" class="btn btn-primary btn-md mr-1 mb-2"><i
                class="fas fa-shopping-cart pr-2"></i>Add to cart</button>
         </form>
      </div>
   </div>
</section>
<!--Section: Block Content-->

@* <script>
    const itemadding = () => {
        var badge = $("#cartBadge").attr("data-count");
        var quantity = $("#qty").val();
        $("#cartBadge").attr("data-count", parseInt(quantity) + parseInt(badge));
    }
</script> *@